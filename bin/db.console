#!/usr/bin/env php
<?php
use Doctrine\DBAL\Migrations\Configuration\Configuration;
use Doctrine\DBAL\Migrations\OutputWriter;
use Symfony\Component\Console\Output\ConsoleOutput;
use Doctrine\DBAL\Migrations\Tools\Console\Command\AbstractCommand;


use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Input\InputArgument;

require_once(__DIR__ . '/../vendor/autoload.php');


$app = new \App\Application();
$app['migrations.output_writer'] = new OutputWriter(
    function ($message) {
        $output = new ConsoleOutput();
        $output->writeln($message);
    }
);

$app['migrations.directory'] = $app['root.path'].'/src/Data/Migrations';
$app['migrations.name'] = 'Migrations';
$app['migrations.namespace'] = 'App\Data\Migrations';
$app['migrations.table_name'] = 'migration_versions';


$configuration = new Configuration($app['db'], $app['migrations.output_writer']);
$configuration->setMigrationsDirectory($app['migrations.directory']);
$configuration->setName($app['migrations.name']);
$configuration->setMigrationsNamespace($app['migrations.namespace']);
$configuration->setMigrationsTableName($app['migrations.table_name']);
$configuration->registerMigrationsFromDirectory($app['migrations.directory']);


$console = new Application();

//$app->boot();

$helperSet = new \Symfony\Component\Console\Helper\HelperSet([
    'db' => new \Doctrine\DBAL\Tools\Console\Helper\ConnectionHelper($app['db']),
    'dialog' => new \Symfony\Component\Console\Helper\QuestionHelper(),
]);
$console->setHelperSet($helperSet);
$commands = [
    '\Doctrine\DBAL\Migrations\Tools\Console\Command\ExecuteCommand',
    '\Doctrine\DBAL\Migrations\Tools\Console\Command\GenerateCommand',
    '\Doctrine\DBAL\Migrations\Tools\Console\Command\MigrateCommand',
    '\Doctrine\DBAL\Migrations\Tools\Console\Command\StatusCommand',
    '\Doctrine\DBAL\Migrations\Tools\Console\Command\VersionCommand',
];
foreach ($commands as $name) {
    /** @var AbstractCommand $command */
    $command = new $name();
    $command->setMigrationConfiguration($configuration);
    $console->add($command);
}


$console->run();
